{"version":3,"sources":["chart.js","btc.js","ltc.js","eth.js","index.js"],"names":["Chart","props","react_default","a","createElement","es","data","options","BtcApp","state","lineChartData","labels","datasets","type","label","backgroundColor","borderColor","_this","theme","palette","primary","main","pointBackgroundColor","secondary","pointBorderColor","borderWidth","lineTension","lineChartOptions","responsive","maintainAspectRatio","maxTicksLimit","padding","tooltips","enabled","scales","xAxes","ticks","autoSkip","yAxes","display","min","steps","stepValue","max","animation","duration","hover","animationDuration","responsiveAnimationDuration","_this2","this","subscribe","channels","name","product_ids","websock","WebSocket","onopen","send","JSON","stringify","onmessage","e","value","parse","product_id","oldBtcDataSet","newBtcDataSet","Object","objectSpread","push","price","newBtcChartData","concat","Date","toLocaleTimeString","setState","close","classes","className","chart","React","Component","withStyles","chart-container","height","withTheme","LtcApp","oldLtcDataSet","newLtcDataSet","newLtcChartData","EthApp","oldEthDataSet","newEthDataSet","newEthChartData","createMuiTheme","ReactDOM","render","styles","btc","ltc","eth","document","getElementById"],"mappings":"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","file":"static/js/main.eb2270cf.chunk.js","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst Chart = props => <Line data={props.data} options={props.options} />;\n\nexport default Chart;","import React from \"react\";\n// import { render } from \"react-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chart from \"./chart\";\n\nconst styles = theme => ({\n  \"chart-container\": {\n    height: 300\n  }\n});\n\n//The states describes the structure of our state in our app\nclass BtcApp extends React.Component {\n  state = {\n    lineChartData: {\n      labels: [],\n      datasets: [\n        {\n          data: [],\n          type: \"line\",\n          label: \"BTC-USD\",\n          backgroundColor: \"rgba(255,255,0,1)\",\n          borderColor: this.props.theme.palette.primary.main,\n          pointBackgroundColor: this.props.theme.palette.secondary.main,\n          pointBorderColor: this.props.theme.palette.secondary.main,\n          borderWidth: \"1\",\n          lineTension: 0.45,\n\n        },\n        \n  \n      ]\n    },\n    lineChartOptions: {\n      responsive: true,\n      maintainAspectRatio: false,\n      \n    options:{\n      maxTicksLimit:100,\n      padding: 1000\n    },\n      tooltips: {\n        enabled: true\n      },\n      scales: {\n        xAxes: [\n          {\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 50\n            }\n          },\n          \n        ],\n        yAxes: [{\n          display: true,\n          ticks: {\n            min: 3550,\n            steps:100,\n            stepValue:100,\n            max:3650\n          }\n      }],\n        animation: {\n          duration: 0, // general animation time\n        },\n        hover: {\n            animationDuration: 0, // duration of animations when hovering an item\n        },\n        responsiveAnimationDuration: 0,\n      }\n    }\n  };\n\n  //\n\n  componentDidMount() {\n    const subscribe = {\n      type: \"subscribe\",\n      channels: [\n        {\n          name: \"ticker\",\n          product_ids: [\"BTC-USD\"]\n        },\n\n      ]\n    };\n\n    this.websock = new WebSocket(\"wss://ws-feed.pro.coinbase.com\");\n\n    this.websock.onopen = () => {\n      this.websock.send(JSON.stringify(subscribe));\n    };\n\n    this.websock.onmessage = e => {\n      const value = JSON.parse(e.data);\n      // console.log(value)\n      if (value.type !== \"ticker\" && value.product_id === \"LTC-USD\") {\n        return;\n      }\n      //BTC\n\n      const oldBtcDataSet = this.state.lineChartData.datasets[0];\n      const newBtcDataSet = { ...oldBtcDataSet };\n      newBtcDataSet.data.push(value.price);\n\n\n\n      const newBtcChartData = {\n        ...this.state.lineChartData,\n        datasets: [newBtcDataSet],\n        labels: this.state.lineChartData.labels.concat(\n          new Date().toLocaleTimeString()\n        )\n      };\n  \n      this.setState({ lineChartData: newBtcChartData });\n\n\n\n    };\n  }\n\n  componentWillUnmount() {\n    this.websock.close();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes[\"chart-container\"]}>\n        <Chart\n          data={this.state.lineChartData}\n          options={this.state.lineChartOptions}\n        />\n      </div>\n      \n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(BtcApp);","import React from \"react\";\n// import { render } from \"react-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chart from \"./chart\";\n\nconst styles = theme => ({\n  \"chart-container\": {\n    height: 300\n  }\n});\n\n//The states describes the structure of our state in our app\nclass LtcApp extends React.Component {\n  state = {\n    lineChartData: {\n      labels: [],\n      datasets: [\n        {\n          data: [],\n          type: \"line\",\n          label: \"LTC-USD\",\n          backgroundColor: \"rgba(51,0,255,1)\",\n          borderColor: this.props.theme.palette.primary.main,\n          pointBackgroundColor: this.props.theme.palette.secondary.main,\n          pointBorderColor: this.props.theme.palette.secondary.main,\n          borderWidth: \"1\",\n          lineTension: 0.2,\n        },\n      ]\n    },\n    lineChartOptions: {\n      responsive: true,\n      maintainAspectRatio: false,\n      tooltips: {\n        enabled: true\n      },\n      scales: {\n        xAxes: [\n          {\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 100\n            }\n          }\n        ],\n        yAxes: [{\n            display: true,\n            ticks: {\n                min: 20,\n                steps:10,\n                stepValue:10,\n                max:40\n            }\n      }],\n        animation: {\n            duration: 0, // general animation time\n        },\n        hover: {\n            animationDuration: 0, // duration of animations when hovering an item\n        },\n        responsiveAnimationDuration: 0,\n        }\n    }\n}\n\n  //\n\n  componentDidMount() {\n    const subscribe = {\n      type: \"subscribe\",\n      channels: [\n        {\n          name: \"ticker\",\n          product_ids: [\"LTC-USD\"]\n        },\n      ]\n    };\n\n    this.websock = new WebSocket(\"wss://ws-feed.pro.coinbase.com\");\n\n    this.websock.onopen = () => {\n      this.websock.send(JSON.stringify(subscribe));\n    };\n\n    this.websock.onmessage = e => {\n      const value = JSON.parse(e.data);\n      if (value.type !== \"ticker\") {\n        return;\n      }\n\n    //   LTC\n    // console.log(this.state.lineChartData.datasets)\n      const oldLtcDataSet = this.state.lineChartData.datasets[0]\n      const newLtcDataSet = {...oldLtcDataSet };\n      newLtcDataSet.data.push(value.price);\n\n      const newLtcChartData = {\n        ...this.state.lineChartData,\n        datasets: [newLtcDataSet],\n        labels: this.state.lineChartData.labels.concat(\n          new Date().toLocaleTimeString()\n        )\n      };\n      this.setState({ lineChartData: newLtcChartData });\n\n    };\n  }\n\n  componentWillUnmount() {\n    this.websock.close();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes[\"chart-container\"]}>\n        <Chart\n          data={this.state.lineChartData}\n          options={this.state.lineChartOptions}\n        />\n      </div>\n      \n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(LtcApp);","import React from \"react\";\n// import { render } from \"react-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chart from \"./chart\";\n\nconst styles = theme => ({\n  \"chart-container\": {\n    height: 300\n  }\n});\n\n//The states describes the structure of our state in our app\nclass EthApp extends React.Component {\n  state = {\n    lineChartData: {\n      labels: [],\n      datasets: [\n        {\n          data: [],\n          type: \"line\",\n          label: \"ETH-USD\",\n          backgroundColor: \"rgba(0,255,51,0.2)\",\n          borderColor: this.props.theme.palette.primary.main,\n          pointBackgroundColor: this.props.theme.palette.secondary.main,\n          pointBorderColor: this.props.theme.palette.secondary.main,\n          borderWidth: \"1\",\n          lineTension: 0.2,\n        },\n      ]\n    },\n    lineChartOptions: {\n      responsive: true,\n      maintainAspectRatio: false,\n      tooltips: {\n        enabled: true\n      },\n      scales: {\n        xAxes: [\n          {\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 100\n            }\n          }\n        ],\n        yAxes: [{\n          display: true,\n          ticks: {\n            min: 100,\n            steps:10,\n            stepValue:10,\n            max:130\n          }\n    }],\n      animation: {\n          duration: 0, // general animation time\n      },\n      hover: {\n          animationDuration: 0, // duration of animations when hovering an item\n      },\n      responsiveAnimationDuration: 0,\n      }\n    }\n  };\n\n  //\n\n  componentDidMount() {\n    const subscribe = {\n      type: \"subscribe\",\n      channels: [\n        {\n          name: \"ticker\",\n          product_ids: [\"ETH-USD\"]\n        },\n      ]\n    };\n\n    this.websock = new WebSocket(\"wss://ws-feed.pro.coinbase.com\");\n\n    this.websock.onopen = () => {\n      this.websock.send(JSON.stringify(subscribe));\n    };\n\n    this.websock.onmessage = e => {\n      const value = JSON.parse(e.data);\n      if (value.type !== \"ticker\") {\n        return;\n      }\n\n    //   LTC\n    // console.log(this.state.lineChartData.datasets)\n      const oldEthDataSet = this.state.lineChartData.datasets[0]\n      const newEthDataSet = {...oldEthDataSet };\n      newEthDataSet.data.push(value.price);\n\n      const newEthChartData = {\n        ...this.state.lineChartData,\n        datasets: [newEthDataSet],\n        labels: this.state.lineChartData.labels.concat(\n          new Date().toLocaleTimeString()\n        )\n      };\n      this.setState({ lineChartData: newEthChartData });\n\n    };\n  }\n\n  componentWillUnmount() {\n    this.websock.close();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes[\"chart-container\"]}>\n        <Chart\n          data={this.state.lineChartData}\n          options={this.state.lineChartOptions}\n        />\n      </div>\n      \n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(EthApp);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport BtcApp from \"./btc\";\nimport LtcApp from \"./ltc\"\nimport EthApp from \"./eth\"\n\n\nconst theme = createMuiTheme();\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <BtcApp />\n    <LtcApp />\n    <EthApp />\n\n  </MuiThemeProvider>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}